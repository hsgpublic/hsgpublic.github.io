<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on hsg의 IT 로그</title>
    <link>https://hsgpublic.github.io/categories/docker/</link>
    <description>Recent content in Docker on hsg의 IT 로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>hsgpublic@gmail.com (hsg)</managingEditor>
    <webMaster>hsgpublic@gmail.com (hsg)</webMaster>
    <lastBuildDate>Sun, 26 May 2024 09:29:27 +0900</lastBuildDate>
    <atom:link href="https://hsgpublic.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker 설치</title>
      <link>https://hsgpublic.github.io/posts/8/</link>
      <pubDate>Sun, 26 May 2024 09:29:27 +0900</pubDate><author>hsgpublic@gmail.com (hsg)</author>
      <guid>https://hsgpublic.github.io/posts/8/</guid>
      <description>1. 서론. 1-1. 가상화 사용 이전. 가상화 사용 이전에는 서비스를 운영하려면 필요한 모든 패지키들을 시스템에 설치해야 했습니다. 잘 설치되면 좋은데 패키지의 버전, 패키지들 간의 의존성 문제 때문에 한번에 성공하기 힘들었죠. 간혹 환경설정 중 패키지들끼리 충돌하거나 설정이 꼬여 복구가 불가능해지면 성공할 때까지 [ 시스템 포맷 - OS 재설치 - 패키지 재설치 ]를 반복하기도 했습니다. 물론 쉘 스크립트로 자동화 시켜두면 재설치 시에 투입되는 시간과 노력을 많이 줄일 수 있습니다.&#xA;1-2. OS 가상화 사용.</description>
    </item>
  </channel>
</rss>
