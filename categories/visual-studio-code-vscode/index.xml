<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visual Studio Code (VSCode) on hsg의 IT 로그</title>
    <link>https://hsgpublic.github.io/categories/visual-studio-code-vscode/</link>
    <description>Recent content in Visual Studio Code (VSCode) on hsg의 IT 로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <managingEditor>hsgpublic@gmail.com (hsg)</managingEditor>
    <webMaster>hsgpublic@gmail.com (hsg)</webMaster>
    <lastBuildDate>Thu, 27 Jun 2024 08:24:07 +0900</lastBuildDate>
    <atom:link href="https://hsgpublic.github.io/categories/visual-studio-code-vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code server on Docker</title>
      <link>https://hsgpublic.github.io/posts/10/</link>
      <pubDate>Thu, 27 Jun 2024 08:24:07 +0900</pubDate><author>hsgpublic@gmail.com (hsg)</author>
      <guid>https://hsgpublic.github.io/posts/10/</guid>
      <description>1. 서론. 에디터로 VSCode를 주로 사용합니다. 고정된 장소에서는 데스크탑이나 랩탑 환경에서 VSCode로 개발 또는 문서 작성을 하지만, 이동 중 아이패드에서는 사용할 수 없어 불편합니다. 아이패드용 VSCode 앱이 없기 때문이죠. 그렇다고 방법이 없는 것은 아닙니다. 웹 브라우저로 접속해 이용할 수 있도록 기능을 제공하니까요. https://vscode.dev 에 접속해 사용 가능하지만 터미널 등의 기능에 제약이 있어서, 개인 서버에 설치해 사용하는 몇가지 방법을 알아봅니다.&#xA;2. Code CLI. 문서: Command Line Interface (CLI) VSCode를 설치하면 CLI도 함께 설치되며, CLI만 설치하는 것도 가능합니다.</description>
    </item>
    <item>
      <title>Dart 웹 서버 프로젝트 생성</title>
      <link>https://hsgpublic.github.io/posts/7/</link>
      <pubDate>Thu, 09 Sep 2021 22:06:57 +0900</pubDate><author>hsgpublic@gmail.com (hsg)</author>
      <guid>https://hsgpublic.github.io/posts/7/</guid>
      <description>1. 서론. Flutter 프레임워크 설치 시 Dart가 기본 설치됩니다. Dart 언어로 개발되었기 때문입니다. CLI 앱, GUI 앱, 웹 서버까지 모두 개발 가능해 하나의 언어로 서비스 전체를 구성할 수 있습니다. 언어에 익숙해질 겸 웹 서버 프로젝트를 생성해 보았습니다.&#xA;2. 프로젝트 생성. 상단 메뉴의 View - Command Palette를 선택하거나 Shift+Command+P를 입력해 커맨드 팔레트를 실행합니다.&#xA;&amp;gt;Dart: New Project 를 입력하고 엔터를 입력합니다. 우측 하단에 &amp;ldquo;Stagehand needs to be installed with &amp;lsquo;pub global active stagehand&amp;rsquo; to use this feature.</description>
    </item>
    <item>
      <title>Flutter &#43; Dart 설치 및  VSCode 설정</title>
      <link>https://hsgpublic.github.io/posts/6/</link>
      <pubDate>Tue, 07 Sep 2021 22:09:10 +0900</pubDate><author>hsgpublic@gmail.com (hsg)</author>
      <guid>https://hsgpublic.github.io/posts/6/</guid>
      <description>1. 서론. 1-1. 이슈. 개발을 하다 보면 같은 서비스라 할지라도 윈도우/리눅스/맥 프로그램은 아예 별개로 구분하는 반면 안드로이드/iOS 앱은 별개로 구분하지 않으려는 경향이 강합니다. 경영/운영/기획/디자인 파트는 물론이고 앱 개발자를 제외한 개발자들도 그렇게 인식합니다. 심지어 PC웹/모바일웹도 구분하는데 말이죠.&#xA;여기에서 문제가 발생하는데, 간단한 수정이라 할지라도 안드로이드/iOS 앱을 각각 개발해야 하는 것을 이해하지 않고 하나의 일정으로 산정하려 해 마찰이 자주 발생합니다. 인력도 안드로이드/iOS 앱 개발자 각각 필요하지 않다고 생각하는 경우가 많습니다.&#xA;1-2. 필요성. 이러한 이슈가 최근에만 있었던 것이 아니라 스마트폰 보급 초창기부터 이어져 왔습니다.</description>
    </item>
    <item>
      <title>Java 설치 및 VSCode 설정</title>
      <link>https://hsgpublic.github.io/posts/4/</link>
      <pubDate>Mon, 08 Feb 2021 22:08:44 +0900</pubDate><author>hsgpublic@gmail.com (hsg)</author>
      <guid>https://hsgpublic.github.io/posts/4/</guid>
      <description>구형 맥북을 팔고 임시로 구입한 노트북에다 리눅스를 설치해 사용하느라 바로 전 포스트까지는 리눅스 기준으로 작성했지만, 맥북 에어 M1을 구입했으니 이제부터 macOS 기준으로 작성합니다. 하지만, 개발환경이 VSCode로 동일하니 이질감이 없을 것입니다. 1. Java 설치. 맥, 리눅스, 윈도우 사용자는 https://adoptopenjdk.net 에서 다운받아 설치하면 됩니다.&#xA;맥에서는 아래와 같이 설치할 수도 있습니다.&#xA;$ brew install openjdk ## 또는 $ port install openjdk 리눅스에서는 아래와 같이 설치할 수도 있습니다.&#xA;$ snap install openjdk 2. VSCode 설정.</description>
    </item>
    <item>
      <title>Go 설치 및 VSCode 설정</title>
      <link>https://hsgpublic.github.io/posts/3/</link>
      <pubDate>Sun, 20 Dec 2020 11:15:43 +0900</pubDate><author>hsgpublic@gmail.com (hsg)</author>
      <guid>https://hsgpublic.github.io/posts/3/</guid>
      <description>1. Go 설치. 참고: https://golang.org/doc/install 맥과 윈도우에서는 설치파일을 다운받아 설치하면 됩니다.&#xA;리눅스에서는 실행파일이 압축파일로 되어 있어 특정 디렉토리에 풀고 PATH를 설정해 주면 됩니다.&#xA;## 실행파일을 다운받아 /usr/local에 압축해제 하면 /usr/local/go 디렉토리가 생성됩니다. $ sudo tar -C /usr/local -xzf https://golang.org/dl/go1.15.6.linux-amd64.tar.gz ## Go 실행 PATH 추가. $ echo &amp;#39;PATH=&amp;#34;$PATH:/usr/local/go/bin&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.profile ## .profile 설정 재로딩. $ source .profile Go 설치 확인&#xA;## Go 실행 확인. $ go version go version go1.15.6 linux/amd64 2.</description>
    </item>
    <item>
      <title>Visual Studio Code (VSCode)</title>
      <link>https://hsgpublic.github.io/posts/2/</link>
      <pubDate>Sat, 19 Dec 2020 07:08:19 +0900</pubDate><author>hsgpublic@gmail.com (hsg)</author>
      <guid>https://hsgpublic.github.io/posts/2/</guid>
      <description>1. 서론. (Visual Studio Code = VSCode)&#xA;1-1. VSCode 사용 전. 개발툴은 다양합니다. 저는 툴을 잘 다루지 못해서, 타겟 플랫폼 또는 언어에 최적화 되어 있고 추가 설정 필요 없는 IDE가 좋습니다. 하지만, Go 언어 개발용 LiteIDE를 제외하고는 점점 무거워지고, Mac/Linux/Windows 사용 중이라 OS에 따라 성능 차이가 심하게 나는 점 때문에 다른 툴이 없나 계속 찾아보곤 했죠.&#xA;1-2. VSCode 사용 계기. 그러다 GitHub에서 만든 Atom 에디터를 접했는데, 단순 에디터로 사용하기 편한 UI로 되어 있어 간단한 텍스트 편집용으로 종종 사용해 보다가, 느린 속도와 개발용으로는 별도 설정을 해주어야 해서 사용하지 않았습니다.</description>
    </item>
  </channel>
</rss>
